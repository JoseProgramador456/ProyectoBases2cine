<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>